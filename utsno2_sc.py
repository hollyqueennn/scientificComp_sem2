# -*- coding: utf-8 -*-
"""UTS_SC.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rC1w3zE4JEWaZtmzEhT8D3gemM0Xls5P
"""

import numpy as np
from scipy import interpolate
import matplotlib.pyplot as plt

class HukumHookeEksperimen:
    def __init__(self, gaya, perubahan_x):
        self.gaya = gaya
        self.perubahan_x = perubahan_x

    def tampilkan_grafik(self):
        plt.plot(self.perubahan_x, self.gaya, 'o')
        plt.xlabel("Perubahan X (cm)")
        plt.ylabel("Gaya (N)")
        plt.title("Eksperimen Hukum Hooke")
        plt.show()

    def tren(self):
        k, _ = np.polyfit(self.perubahan_x, self.gaya, 1)
        return k

    def interpolasi_linier(self, x):
        f = interpolate.interp1d(self.perubahan_x, self.gaya)
        return f(x)

    def interpolasi_kubik(self, x):
        f = interpolate.interp1d(self.perubahan_x, self.gaya, kind='cubic')
        return f(x)

# Data Eksperimen
gaya = np.array([60, 120, 180, 240, 300, 360, 420, 480, 540, 600])
perubahan_x = np.array([2.6, 3.1, 4.6, 6.5, 8.5, 11.0, 15.2, 34.7, 65.8, 69.4])

eksperimen = HukumHookeEksperimen(gaya, perubahan_x)

# Menampilkan grafik data
eksperimen.tampilkan_grafik()

# Menghitung tren dengan regresi linier
k = eksperimen.tren()
print("Tren data dengan regresi linier: k = {:.2f} N/cm".format(k))

# Interpolasi menggunakan linier dan kubik
x_interp = np.linspace(min(perubahan_x), max(perubahan_x), 100)
gaya_interp_linier = eksperimen.interpolasi_linier(x_interp)
gaya_interp_kubik = eksperimen.interpolasi_kubik(x_interp)

# Menghitung perubahan_x = 26 cm dengan interpolasi linier dan kubik
gaya_26cm_linier = eksperimen.interpolasi_linier(26)
gaya_26cm_kubik = eksperimen.interpolasi_kubik(26)

# Menghitung Kesalahan Relatif dari interpolasi ke tren
gaya_26cm_tren = k * 26
error_rel_linier = abs(gaya_26cm_linier - gaya_26cm_tren) / gaya_26cm_tren
error_rel_kubik = abs(gaya_26cm_kubik - gaya_26cm_tren) / gaya_26cm_tren

# Menampilkan grafik hasil interpolasi
plt.plot(perubahan_x, gaya, 'o', x_interp, gaya_interp_linier, '-', x_interp, gaya_interp_kubik, '--')
plt.legend(['data', 'linier', 'kubik'], loc='best')
plt.xlabel("Perubahan X (cm)")
plt.ylabel("Gaya (N)")
plt.title("Eksperimen Hukum Hooke")
plt.show()

# Hasil Output
print("Nilai dari delta_x = 26 cm menggunakan interpolasi linier: {:.2f} N".format(gaya_26cm_linier))
print("Nilai dari delta_x = 26 cm menggunakan interpolasi kubik: {:.2f} N".format(gaya_26cm_kubik))
print("Nilai Error Relatif interpolasi linear: {:.2%}".format(error_rel_linier))
print("Nilai Error Relatif interpolasi kubik: {:.2%}".format(error_rel_kubik))